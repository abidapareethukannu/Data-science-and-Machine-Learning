{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPmau+6MDrgLpQP+8ZNX2+J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["chills=['Y','Y','Y','N','N','N','N','Y']\n","runnose=['N','Y','N','Y','N','Y','Y','Y']\n","headache=['MILD','N','STRONG','MILD','N','STRONG','STRONG','MILD']\n","fever=['Y','N','Y','Y','N','Y','N','Y']\n","has_flu=['N','Y','Y','Y','N','Y','N','Y']\n","from heapq import merge\n","from sklearn import preprocessing\n","le=preprocessing.LabelEncoder()\n","chills_encoded=le.fit_transform(chills)\n","print(\"Chills:\",chills_encoded)\n","runnose_encoded=le.fit_transform(runnose)\n","print(\"Running nose:\",runnose_encoded)\n","headache_encoded=le.fit_transform(headache)\n","print(\"Headache:\",headache_encoded)\n","fever_encoded=le.fit_transform(fever)\n","print(\"Fever:\",fever_encoded)\n","label=le.fit_transform(has_flu)\n","print(\"Has Flu:\",label)\n","features=list(zip(chills_encoded,runnose_encoded,headache_encoded,fever_encoded))\n","print(features)\n","from sklearn.naive_bayes import GaussianNB\n","model=GaussianNB()\n","model.fit(features,label)\n","predicted=model.predict([[0,1,2,1]])\n","print(\"Predicted values:\",predicted)\n","print(le.inverse_transform(predicted))"],"metadata":{"id":"wzLlFxRIsjUK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1755751255910,"user_tz":-330,"elapsed":19,"user":{"displayName":"Devika Rajendran","userId":"14590572194786065352"}},"outputId":"0a1d4cf8-6054-4e62-d405-42d8ac5475f7"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Chills: [1 1 1 0 0 0 0 1]\n","Running nose: [0 1 0 1 0 1 1 1]\n","Headache: [0 1 2 0 1 2 2 0]\n","Fever: [1 0 1 1 0 1 0 1]\n","Has Flu: [0 1 1 1 0 1 0 1]\n","[(np.int64(1), np.int64(0), np.int64(0), np.int64(1)), (np.int64(1), np.int64(1), np.int64(1), np.int64(0)), (np.int64(1), np.int64(0), np.int64(2), np.int64(1)), (np.int64(0), np.int64(1), np.int64(0), np.int64(1)), (np.int64(0), np.int64(0), np.int64(1), np.int64(0)), (np.int64(0), np.int64(1), np.int64(2), np.int64(1)), (np.int64(0), np.int64(1), np.int64(2), np.int64(0)), (np.int64(1), np.int64(1), np.int64(0), np.int64(1))]\n","Predicted values: [1]\n","['Y']\n"]}]}]}